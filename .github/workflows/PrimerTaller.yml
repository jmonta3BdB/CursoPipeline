name: Clasificación de edades

on:
  workflow_dispatch:
    inputs:
      dia:
        description: 'Ingresa el día de nacimiento (DD)'
        required: true
        type: string
      mes:
        description: 'Ingresa el mes de nacimiento (MM)' 
        required: true
        type: string
      anio:
        description: 'Ingresa el año de nacimiento (YYYY)'
        required: true
        type: string

env:
  LIM_NINEZ: ${{ vars.LIM_NINEZ }}
  LIM_ADOLESCENCIA: ${{ vars.LIM_ADOLESCENCIA }}
  LIM_ADULTO_JOVEN: ${{ vars.LIM_ADULTO_JOVEN }}
  LIM_ADULTO: ${{ vars.LIM_ADULTO }}

jobs:
  calcular_edad:
    name: Calculo Edad
    runs-on: ubuntu-latest
    outputs:
      edad: ${{ steps.edad.outputs.edad }}
    steps:
      - name: Realizar calculo
        id: edad
        run: |
          # Se exporta fecha la zona horaria de colombia
          export TZ=America/Bogota

          # Convertir los valores a enteros base 10 para evitar errores con ceros a la izquierda
          dia_nac=$((10#${{ github.event.inputs.dia }}))
          mes_nac=$((10#${{ github.event.inputs.mes }}))
          anio_nac=$((10#${{ github.event.inputs.anio }}))
          echo "Fecha de nacimiento: $anio_nac-$mes_nac-$dia_nac"

          # se obtiene la fecha actual del sistema
          dia_act=$(date +%-d)
          mes_act=$(date +%-m)
          anio_act=$(date +%-Y)
          echo "Fecha actual: $anio_act-$mes_act-$dia_act"

          # Se calcula la diferencia directa entre las fechas
          anios=$((anio_act - anio_nac))
          meses=$((mes_act - mes_nac))
          dias=$((dia_act - dia_nac))

          # Ajustar días negativos de acuerdo al paso anterior donde se calcula la diferencia entre las fechas
          if [ "$dias" -lt 0 ]; then
            meses=$((meses - 1))

            # Estimar días del mes anterior (considerando año bisiesto si aplica para febrero)
            case $mes_act in
              1|2|4|6|8|9|11) dias_mes_ant=31 ;;
              5|7|10|12) dias_mes_ant=30 ;;
              3)
                if ((anio_act % 4 == 0 && (anio_act % 100 != 0 || anio_act % 400 == 0))); then
                  dias_mes_ant=29
                else
                  dias_mes_ant=28
                fi
                ;;
            esac
            dias=$((dias + dias_mes_ant))
          fi

          # Ajustar meses si su valor es negativo
          if [ "$meses" -lt 0 ]; then
            anios=$((anios - 1))
            meses=$((meses + 12))
          fi

          echo "Edad exacta: $anios años, $meses meses, $dias días"
          echo "edad=$anios" >> $GITHUB_OUTPUT

  clasificacion_edad:
    name: Clasificación
    needs: calcular_edad
    runs-on: ubuntu-latest
    steps:
      - name: Mostrar mensaje según resultado
        run: |
          edad=${{ needs.calcular_edad.outputs.edad }}
          echo "Edad calculada: $edad"

          if [ "$edad" -lt "$LIM_NINEZ" ]; then
            echo "Etapa: Niñez"
          elif [ "$edad" -lt "$LIM_ADOLESCENCIA" ]; then
            echo "Etapa: Adolescencia"
          elif [ "$edad" -lt "$LIM_ADULTO_JOVEN" ]; then
            echo "Etapa: Adultos Jóvenes"
          elif [ "$edad" -lt "$LIM_ADULTO" ]; then
            echo "Etapa: Adultos"
          else
            echo "Etapa: Vejez"
          fi