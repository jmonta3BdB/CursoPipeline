name: Clasificación de edades

on:
  workflow_dispatch:
    inputs:
      dia:
        description: 'Ingresa el día de nacimiento (DD)'
        required: true
        type: string
      mes:
        description: 'Ingresa el mes de nacimiento (MM)' 
        required: true
        type: string
      anio:
        description: 'Ingresa el año de nacimiento (YYYY)'
        required: true
        type: string

env:
  LIM_NINEZ: ${{ vars.LIM_NINEZ }}
  LIM_ADOLESCENCIA: ${{ vars.LIM_ADOLESCENCIA }}
  LIM_ADULTO_JOVEN: ${{ vars.LIM_ADULTO_JOVEN }}
  LIM_ADULTO: ${{ vars.LIM_ADULTO }}

jobs:
  calcular_edad:
    name: Calculo Edad
    runs-on: ubuntu-latest
    outputs:
      edad: ${{ steps.edad.outputs.edad }}
    steps:
      - name: Realizar calculo
        id: edad
        run: |
          export TZ=America/Bogota

          # Convertir los inputs a enteros base 10
          dia_nac=$((10#${{ github.event.inputs.dia }}))
          mes_nac=$((10#${{ github.event.inputs.mes }}))
          anio_nac=$((10#${{ github.event.inputs.anio }}))

          echo "Fecha ingresada: $anio_nac-$mes_nac-$dia_nac"

          # Obtener fecha actual
          dia_act=$(date +%-d)
          mes_act=$(date +%-m)
          anio_act=$(date +%-Y)

          echo "Fecha actual: $anio_act-$mes_act-$dia_act"

          # Calcular diferencias iniciales
          anios=$((anio_act - anio_nac))
          meses=$((mes_act - mes_nac))
          dias=$((dia_act - dia_nac))

          # Función para saber cuántos días tiene un mes
          dias_en_mes() {
            local mes=$1
            local anio=$2
            case $mes in
              1|3|5|7|8|10|12) echo 31 ;;
              4|6|9|11) echo 30 ;;
              2)
                if (( (anio % 4 == 0 && anio % 100 != 0) || (anio % 400 == 0) )); then
                  echo 29
                else
                  echo 28
                fi
                ;;
            esac
          }

          # Ajuste si los días son negativos
          if [ "$dias" -lt 0 ]; then
            meses=$((meses - 1))
            if [ "$mes_act" -eq 1 ]; then
              mes_anterior=12
              anio_anterior=$((anio_act - 1))
            else
              mes_anterior=$((mes_act - 1))
              anio_anterior=$anio_act
            fi
            dias_prev=$(dias_en_mes $mes_anterior $anio_anterior)
            dias=$((dias + dias_prev))
          fi

          # Ajuste si los meses son negativos
          if [ "$meses" -lt 0 ]; then
            anios=$((anios - 1))
            meses=$((meses + 12))
          fi

          echo "Edad exacta: $anios años, $meses meses, $dias días"
          echo "edad=$anios" >> $GITHUB_OUTPUT


  clasificacion_edad:
    name: Clasificación
    needs: calcular_edad
    runs-on: ubuntu-latest
    steps:
      - name: Mostrar mensaje según resultado
        run: |
          edad=${{ needs.calcular_edad.outputs.edad }}
          echo "Edad calculada: $edad"

          if [ "$edad" -lt "$LIM_NINEZ" ]; then
            echo "Etapa: Niñez"
          elif [ "$edad" -lt "$LIM_ADOLESCENCIA" ]; then
            echo "Etapa: Adolescencia"
          elif [ "$edad" -lt "$LIM_ADULTO_JOVEN" ]; then
            echo "Etapa: Adultos Jóvenes"
          elif [ "$edad" -lt "$LIM_ADULTO" ]; then
            echo "Etapa: Adultos"
          else
            echo "Etapa: Vejez"
          fi
